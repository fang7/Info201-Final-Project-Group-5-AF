sorted.flights <- mutate(flights, time.gained = arr_time - dep_time - air_time) %>%
arrange( -time.gained)
View(head(sorted.flights))
?hist
hist(sorted.flights, time.gained)
hist(time.gained)
hist(flights$time.gained)
sorted.flights <- mutate(flights, time.gained = arr_delay - dep_delay) %>%
arrange( -time.gained)
View(head(sorted.flights))
no.of.rows <- nrow(flights)
no.of.columns <- ncol(flights)
colnames <- colnames(flights)
print(paste(no.of.rows, no.of.columns, colnames))
??flights
# Use `dplyr` to give the data frame a new column that is the amount of time
# gained in the air
flights <- mutate(flights, time.gained = arr_delay - dep_delay)
# View(head(flights))
# Use `dplyr` to sort your data frame in descending order by the column you just
# created. Remember to save this as a variable (or in the same one!)
sorted.flights <- arrange(flights, -time.gained)
# View(head(sorted.flights))
# For practice, repeat the last 2 steps in a single statement using the pipe
# operator. You can clear your environmental variables and reload the library
# to "reset" it.
sorted.flights <- mutate(flights, time.gained = arr_delay - dep_delay) %>%
arrange( -time.gained)
View(head(sorted.flights))
# Make a histogram of the amount of time gained using the `hist()` function
hist(flights$time.gained)
hist(flights$time.gained)
flights.sea <- filter(flight, dest == 'SEA') %>%
select(origin, dest, time.gained)
flights.sea <- filter(flights, dest == 'SEA') %>%
select(origin, dest, time.gained)
flights.sea <- filter(flights, dest == 'SEA') %>%
select(origin, dest, time.gained)
print(flights.sea)
average.time <- summarize(flights.sea, mean(time.gained))
print(average.time)
average.time <- summarize(flights.sea, mean = mean(time.gained))
print(average.time)
average.time <- summarize(flights.sea, mean = mean(time.gained, na.rm = TRUE))
print(average.time)
average <- summarize(flights, mean = mean(time.gained, na.rm = TRUE))
print(average)
answer <- filter(flights.sea, origin == 'JFK') %>%
summarize(average = mean(air_time)
min = min(air_time)
max = max(air_time))
answer <- filter(flights.sea, origin == 'JFK') %>%
summarize(average = mean(air_time),
min = min(air_time),
max = max(air_time)
)
answer <- filter(flights, origin == 'JFK') %>%
filter(dept == 'SEA') %>%
summarize(average = mean(air_time),
min = min(air_time),
max = max(air_time)
)
answer <- filter(flights, origin == 'JFK') %>%
filter(dest == 'SEA') %>%
summarize(average = mean(air_time),
min = min(air_time),
max = max(air_time)
)
answer <- filter(flights, origin == 'JFK') %>%
filter(dest == 'SEA') %>%
summarize(average = mean(air_time),
min = min(air_time),
max = max(air_time)
)
print(answer)
answer <- filter(flights, origin == 'JFK') %>%
filter(dest == 'SEA') %>%
summarize(average = mean(air_time, na.rm = TRUE),
min = min(air_time, na.rm = TRUE),
max = max(air_time, na.rm = TRUE)
)
print(answer)
dep.delay.by.month <- group_by(flights, month) %>%
summarize(
mean = mean(dep_delay)
)
print(dep.delay.by.month)
dep.delay.by.month <- group_by(flights, month) %>%
summarize(
mean = mean(dep_delay, na.rm = TRUE)
)
print(dep.delay.by.month)
max.month <- filter(dep.delay.by.month, mean = max(mean))
print(max.month)
max.month <- filter(dep.delay.by.month, mean == max(mean))
print(max.month)
plot(dep.delay.by.month)
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(average.delay == mean(average.delay, na.rm = TRUE))
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(average.delay == mean(average.delay, na.rm = TRUE))
print(average.arrival.delay)
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
# filter(average.delay == mean(average.delay, na.rm = TRUE))
print(average.arrival.delay)
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(average.delay == max(average.delay, na.rm = TRUE))
print(average.arrival.delay)
highest.speed <- mutate(flights, speed = distance/(hour + minute / 60))
group_by(dest) %>%
summarize(
average.speed <- mean(speed, na.rm = TRUE)
)
filter(average.speed == max(average.speed))
print(highest.speed)
highest.speed <- mutate(flights, speed = distance/(hour + minute / 60))
group_by(dest) %>%
summarize(
average.speed <- mean(speed, na.rm = TRUE)
) %>%
filter(average.speed == max(average.speed))
print(highest.speed)
highest.speed <- mutate(flights, speed = distance/(hour + minute / 60)) %>%
group_by(dest) %>%
summarize(
average.speed <- mean(speed, na.rm = TRUE)
) %>%
filter(average.speed == max(average.speed))
print(highest.speed)
highest.speed <- mutate(flights, speed = distance/(hour + minute / 60)) %>%
group_by(dest) %>%
summarize(
average.speed <- mean(speed, na.rm = TRUE)
) %>%
filter(average.speed == max(average.speed))
print(highest.speed)
library(nycflights13)
library(dplyr)
# What was the average departure delay in each month?
# Save this as a data frame `dep.delay.by.month`
# Hint: you'll have to perform a grouping operation before summarizing your data
dep.delay.by.month <- group_by(flights, month) %>%
summarize(
mean = mean(dep_delay, na.rm = TRUE)
)
print(dep.delay.by.month)
# Which month had the greatest average departure delay?
max.month <- filter(dep.delay.by.month, mean == max(mean))
print(max.month)
# If your above data frame contains just two columns (e.g., "month", and "delay"
# in that order), you can create a scatterplot by passing that data frame to the
# 'plot()' function
plot(dep.delay.by.month)
# To which destinations were the average arrival delays the highest?
# Hint: you'll have to perform a grouping operation before summarizing your data
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(average.delay == max(average.delay, na.rm = TRUE))
print(average.arrival.delay)
# You can look up these airports in the `airports` data frame!
# Which city was flown to with the highest average speed?
highest.speed <- mutate(flights, speed = distance/(hour + minute / 60)) %>%
group_by(dest) %>%
summarize(
average.speed <- mean(speed, na.rm = TRUE)
) %>%
filter(average.speed == max(average.speed))
print(highest.speed)
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(average.delay == max(average.delay, na.rm = TRUE))
print(average.arrival.delay)
View(head(airports))
View(head(average.delay))
average.delay <- group_by(flights, dest) %>%
summarize(
average = mean(arr_delay)
)
View(head(average.delay))
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(average.delay == max(average.delay, na.rm = TRUE))
print(average.arrival.delay)
View(head(airports))
# You can look up these airports in the `airports` data frame!
View(head(airports))
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
?cut()
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
countries <- map_data("world")
View(countries)
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
install.packages("sp")
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
install.packages('maptools')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='sherleyt',
token='210B9238D5690C0A1540C7A22D028604',
secret='<SECRET>')
rsconnect::setAccountInfo(name='sherleyt',
token='210B9238D5690C0A1540C7A22D028604',
secret='1N//AOKd3Na8+g2GPVk98A81Z1ED3s9mZgT+L7kh')
rsconnect::setAccountInfo(name='sherleyt',
token='210B9238D5690C0A1540C7A22D028604',
secret='1N//AOKd3Na8+g2GPVk98A81Z1ED3s9mZgT+L7kh')
install.packages("gpclib")
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/Info201-Final-Project-Group-5-AF')
install.packages("gpclib")
runApp('Documents/University of Washington, Seattle/INFO 201/Info201-Final-Project-Group-5-AF')
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/Info201-Final-Project-Group-5-AF')
runApp('Documents/University of Washington, Seattle/INFO 201/Info201-Final-Project-Group-5-AF')
library(shiny)
library(ggplot2)
library(dplyr)
library(maps)
source('spatial_utils.R')
#meteorite.data <- source("CleanMeteoriteData.R")
#is.data.frame(meteorite.data)
#meteorite.data <- flatten(meteorite.data)
complete.meteorite.data <- read.csv("data/meteorite-landings.csv",
stringsAsFactors = FALSE)
population.density <- read.csv("data/world_population.csv",
stringsAsFactors = FALSE)
temp.pd <- population.density[, 1:44]
colnames(temp.pd) <- c('Country', '1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988',
'1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004',
'2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016')
countries <- map_data("world")
#relevant <- select(temp.pd, 'Country', '1995') %>%
#  na.omit()
both_data <- left_join(countries, temp.pd, by = c("region" = "Country"))
setwd("~/Documents/University of Washington, Seattle/INFO 201/Info201-Final-Project-Group-5-AF")
library(shiny)
library(ggplot2)
library(dplyr)
library(maps)
source('spatial_utils.R')
#meteorite.data <- source("CleanMeteoriteData.R")
#is.data.frame(meteorite.data)
#meteorite.data <- flatten(meteorite.data)
complete.meteorite.data <- read.csv("data/meteorite-landings.csv",
stringsAsFactors = FALSE)
population.density <- read.csv("data/world_population.csv",
stringsAsFactors = FALSE)
temp.pd <- population.density[, 1:44]
colnames(temp.pd) <- c('Country', '1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988',
'1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004',
'2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016')
countries <- map_data("world")
#relevant <- select(temp.pd, 'Country', '1995') %>%
#  na.omit()
both_data <- left_join(countries, temp.pd, by = c("region" = "Country"))
View(both_data)
choosen <- select(both_data, long, lat, region, '1995')
View(choosen)
year <- 1995
choosen <- select(both_data, long, lat, region, !!(year))
runApp()
runApp()
runApp()
year <- rlang::sym('1995')
choosen <- select(both_data, long, lat, region, (!!year))
year2 <- '1995'
year <- rlang::sym(year2)
choosen <- select(both_data, long, lat, region, (!!year))
year2 <- '1995'
year <- rlang::sym(year2)
choosen <- select(both_data, long, lat, region, (!!year))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
colnames(temp.pd) <- c('Country', '1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988',
'1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004',
'2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016')
colnames(temp.pd) <- paste0('yr',colnames(temp.pd))
View(temp.pd)
temp.pd <- population.density[, 1:44]
colnames(temp.pd) <- c('Country', '1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988',
'1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004',
'2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016')
colnames(temp.pd) <- paste0('yr',colnames(temp.pd))
countries <- map_data("world")
#relevant <- select(temp.pd, 'Country', '1995') %>%
#  na.omit()
both_data <- left_join(countries, temp.pd, by = c("region" = "Country"))
colnames(temp.pd) <- c('Country', '1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988',
'1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004',
'2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016')
colnames(temp.pd) <- paste0('yr',colnames(temp.pd))
countries <- map_data("world")
#relevant <- select(temp.pd, 'Country', '1995') %>%
#  na.omit()
both_data <- left_join(countries, temp.pd, by = c("region" = "Country"))
# na.omit()
View(both_data)
library(shiny)
library(ggplot2)
library(dplyr)
library(maps)
source('spatial_utils.R')
#meteorite.data <- source("CleanMeteoriteData.R")
#is.data.frame(meteorite.data)
#meteorite.data <- flatten(meteorite.data)
complete.meteorite.data <- read.csv("data/meteorite-landings.csv",
stringsAsFactors = FALSE)
population.density <- read.csv("data/world_population.csv",
stringsAsFactors = FALSE)
temp.pd <- population.density[, 1:44]
colnames(temp.pd) <- c('Country', '1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988',
'1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004',
'2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016')
colnames(temp.pd) <- paste0('yr',colnames(temp.pd))
countries <- map_data("world")
#relevant <- select(temp.pd, 'Country', '1995') %>%
#  na.omit()
both_data <- left_join(countries, temp.pd, by = c("region" = "Country"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("RColorBrewer")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
