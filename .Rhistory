# Save this vector in a variable
diff.manu <- vehicles[,'make']
print(diff.manu)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
ans <- unique(diff.manu)
print(length(ans))
# Filter the data set for vehicles manufactured in 1997
cars.1997 <- vehicles[vehicles$year == 1997]
diff.manu <- vehicles[,'make']
print(diff.manu)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
ans <- unique(diff.manu)
print(length(ans))
# Filter the data set for vehicles manufactured in 1997
cars.1997 <- vehicles[vehicles$year == 1997,]
cars.1997 <- cars.1997[order(cars.1997$hwy)]
cars.1997 <- cars.1997[order(cars.1997$hwy),]
cars.1997 <- cars.1997[order(cars.1997$hwy),]
print(cars.1997)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles$average <- (vehicles$hwy + vehicles$cty) / 2
vehicles$average <- (vehicles$hwy + vehicles$cty) / 2
print(vehicles$average)
new.vehicles <- vehicles[vehicles$cty > 20 & vehicles$drive == '2-Wheel Drive']
new.vehicles <- vehicles[vehicles$cty > 20 & vehicles$drive == '2-Wheel Drive',]
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(dplyr)
library("dplyr")
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
vehicles <- filter(vehicles, makes)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
vehicles <- filter(vehicles, make)
#install.packages('devtools')
#devtools::install_github("hadley/fueleconomy")
library(fueleconomy)
# Install and load the "dplyr" library
library("dplyr")
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
vehicles <- filter(vehicles, make)
cars.1997 <- filter(vehicles, make == 1997)
cars.more <- filter(cars.1997, drive = '2-Wheel Drive' & cty > 20)
cars.more <- filter(cars.1997, drive == '2-Wheel Drive' & cty > 20)
library(fueleconomy)
# Install and load the "dplyr" library
library("dplyr")
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
vehicles <- select(vehicles, make)
# Use the `distinct()` function to determine how many different car manufacturers
# are represented by the data set
# Filter the data set for vehicles manufactured in 1997
cars.1997 <- filter(vehicles, make == 1997)
# Arrange the 1997 cars by highway (`hwy`) gas milage
cars.1997 <- arrange(cars.1997, hwy)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
cars.1997 <- mutate(cars.1997, average = (city + hwy)/2)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
cars.more <- filter(cars.1997, drive == '2-Wheel Drive' & cty > 20)
# install library of data sets
install.packages("nycflights13")
# load library
library("nycflights13")
# inspect the `flights` data frame
View(head(flights))  #first 6 rows
# load library
library("nycflights13")
# inspect the `flights` data frame
View(head(flights))  #first 6 rows
# The data.frame `flights` should now be accessible to you.
# Use functions to inspect it: how many rows and columns does it have?
# What are the names of the columns?
# Use `??flights` to search for documentation on the data set (for what the
# columns represent)
no.of.rows <- nrow(flights)
no.of.columns <- ncol(flights)
colnames <- colnames(flights)
print(paste(no.of.rows, no.of.columns, colnames()))
??flights
library("nycflights13")
# inspect the `flights` data frame
View(head(flights))  #first 6 rows
# The data.frame `flights` should now be accessible to you.
# Use functions to inspect it: how many rows and columns does it have?
# What are the names of the columns?
# Use `??flights` to search for documentation on the data set (for what the
# columns represent)
no.of.rows <- nrow(flights)
no.of.columns <- ncol(flights)
colnames <- colnames(flights)
print(paste(no.of.rows, no.of.columns, colnames)
??flights
no.of.rows <- nrow(flights)
no.of.columns <- ncol(flights)
colnames <- colnames(flights)
print(paste(no.of.rows, no.of.columns, colnames))
??flights
??flights
flights <- mutate(flights, time.gained = arr_time - dep_time - air_time)
library('dplyr')
flights <- mutate(flights, time.gained = arr_time - dep_time - air_time)
no.of.rows <- nrow(flights)
no.of.columns <- ncol(flights)
colnames <- colnames(flights)
print(paste(no.of.rows, no.of.columns, colnames))
??flights
# Use `dplyr` to give the data frame a new column that is the amount of time
# gained in the air
flights <- mutate(flights, time.gained = arr_time - dep_time - air_time)
flights <- mutate(flights, time.gained = arr_time - dep_time - air_time)
View(head(flights))
# Use `dplyr` to sort your data frame in descending order by the column you just
# created. Remember to save this as a variable (or in the same one!)
sorted.flights <- arrange(flights, -time.gained)
View(head(sorted.flights))
sorted.flights <- mutate(flights, time.gained = arr_time - dep_time - air_time) %>%
arrange( -time.gained)
sorted.flights <- mutate(flights, time.gained = arr_time - dep_time - air_time) %>%
arrange( -time.gained)
View(head(sorted.flights))
?hist
hist(sorted.flights, time.gained)
hist(time.gained)
hist(flights$time.gained)
sorted.flights <- mutate(flights, time.gained = arr_delay - dep_delay) %>%
arrange( -time.gained)
View(head(sorted.flights))
no.of.rows <- nrow(flights)
no.of.columns <- ncol(flights)
colnames <- colnames(flights)
print(paste(no.of.rows, no.of.columns, colnames))
??flights
# Use `dplyr` to give the data frame a new column that is the amount of time
# gained in the air
flights <- mutate(flights, time.gained = arr_delay - dep_delay)
# View(head(flights))
# Use `dplyr` to sort your data frame in descending order by the column you just
# created. Remember to save this as a variable (or in the same one!)
sorted.flights <- arrange(flights, -time.gained)
# View(head(sorted.flights))
# For practice, repeat the last 2 steps in a single statement using the pipe
# operator. You can clear your environmental variables and reload the library
# to "reset" it.
sorted.flights <- mutate(flights, time.gained = arr_delay - dep_delay) %>%
arrange( -time.gained)
View(head(sorted.flights))
# Make a histogram of the amount of time gained using the `hist()` function
hist(flights$time.gained)
hist(flights$time.gained)
flights.sea <- filter(flight, dest == 'SEA') %>%
select(origin, dest, time.gained)
flights.sea <- filter(flights, dest == 'SEA') %>%
select(origin, dest, time.gained)
flights.sea <- filter(flights, dest == 'SEA') %>%
select(origin, dest, time.gained)
print(flights.sea)
average.time <- summarize(flights.sea, mean(time.gained))
print(average.time)
average.time <- summarize(flights.sea, mean = mean(time.gained))
print(average.time)
average.time <- summarize(flights.sea, mean = mean(time.gained, na.rm = TRUE))
print(average.time)
average <- summarize(flights, mean = mean(time.gained, na.rm = TRUE))
print(average)
answer <- filter(flights.sea, origin == 'JFK') %>%
summarize(average = mean(air_time)
min = min(air_time)
max = max(air_time))
answer <- filter(flights.sea, origin == 'JFK') %>%
summarize(average = mean(air_time),
min = min(air_time),
max = max(air_time)
)
answer <- filter(flights, origin == 'JFK') %>%
filter(dept == 'SEA') %>%
summarize(average = mean(air_time),
min = min(air_time),
max = max(air_time)
)
answer <- filter(flights, origin == 'JFK') %>%
filter(dest == 'SEA') %>%
summarize(average = mean(air_time),
min = min(air_time),
max = max(air_time)
)
answer <- filter(flights, origin == 'JFK') %>%
filter(dest == 'SEA') %>%
summarize(average = mean(air_time),
min = min(air_time),
max = max(air_time)
)
print(answer)
answer <- filter(flights, origin == 'JFK') %>%
filter(dest == 'SEA') %>%
summarize(average = mean(air_time, na.rm = TRUE),
min = min(air_time, na.rm = TRUE),
max = max(air_time, na.rm = TRUE)
)
print(answer)
dep.delay.by.month <- group_by(flights, month) %>%
summarize(
mean = mean(dep_delay)
)
print(dep.delay.by.month)
dep.delay.by.month <- group_by(flights, month) %>%
summarize(
mean = mean(dep_delay, na.rm = TRUE)
)
print(dep.delay.by.month)
max.month <- filter(dep.delay.by.month, mean = max(mean))
print(max.month)
max.month <- filter(dep.delay.by.month, mean == max(mean))
print(max.month)
plot(dep.delay.by.month)
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(average.delay == mean(average.delay, na.rm = TRUE))
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(average.delay == mean(average.delay, na.rm = TRUE))
print(average.arrival.delay)
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
# filter(average.delay == mean(average.delay, na.rm = TRUE))
print(average.arrival.delay)
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(average.delay == max(average.delay, na.rm = TRUE))
print(average.arrival.delay)
highest.speed <- mutate(flights, speed = distance/(hour + minute / 60))
group_by(dest) %>%
summarize(
average.speed <- mean(speed, na.rm = TRUE)
)
filter(average.speed == max(average.speed))
print(highest.speed)
highest.speed <- mutate(flights, speed = distance/(hour + minute / 60))
group_by(dest) %>%
summarize(
average.speed <- mean(speed, na.rm = TRUE)
) %>%
filter(average.speed == max(average.speed))
print(highest.speed)
highest.speed <- mutate(flights, speed = distance/(hour + minute / 60)) %>%
group_by(dest) %>%
summarize(
average.speed <- mean(speed, na.rm = TRUE)
) %>%
filter(average.speed == max(average.speed))
print(highest.speed)
highest.speed <- mutate(flights, speed = distance/(hour + minute / 60)) %>%
group_by(dest) %>%
summarize(
average.speed <- mean(speed, na.rm = TRUE)
) %>%
filter(average.speed == max(average.speed))
print(highest.speed)
library(nycflights13)
library(dplyr)
# What was the average departure delay in each month?
# Save this as a data frame `dep.delay.by.month`
# Hint: you'll have to perform a grouping operation before summarizing your data
dep.delay.by.month <- group_by(flights, month) %>%
summarize(
mean = mean(dep_delay, na.rm = TRUE)
)
print(dep.delay.by.month)
# Which month had the greatest average departure delay?
max.month <- filter(dep.delay.by.month, mean == max(mean))
print(max.month)
# If your above data frame contains just two columns (e.g., "month", and "delay"
# in that order), you can create a scatterplot by passing that data frame to the
# 'plot()' function
plot(dep.delay.by.month)
# To which destinations were the average arrival delays the highest?
# Hint: you'll have to perform a grouping operation before summarizing your data
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(average.delay == max(average.delay, na.rm = TRUE))
print(average.arrival.delay)
# You can look up these airports in the `airports` data frame!
# Which city was flown to with the highest average speed?
highest.speed <- mutate(flights, speed = distance/(hour + minute / 60)) %>%
group_by(dest) %>%
summarize(
average.speed <- mean(speed, na.rm = TRUE)
) %>%
filter(average.speed == max(average.speed))
print(highest.speed)
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(average.delay == max(average.delay, na.rm = TRUE))
print(average.arrival.delay)
View(head(airports))
View(head(average.delay))
average.delay <- group_by(flights, dest) %>%
summarize(
average = mean(arr_delay)
)
View(head(average.delay))
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(average.delay == max(average.delay, na.rm = TRUE))
print(average.arrival.delay)
View(head(airports))
# You can look up these airports in the `airports` data frame!
View(head(airports))
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
?cut()
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
countries <- map_data("world")
View(countries)
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
install.packages("sp")
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
install.packages('maptools')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='sherleyt',
token='210B9238D5690C0A1540C7A22D028604',
secret='<SECRET>')
rsconnect::setAccountInfo(name='sherleyt',
token='210B9238D5690C0A1540C7A22D028604',
secret='1N//AOKd3Na8+g2GPVk98A81Z1ED3s9mZgT+L7kh')
rsconnect::setAccountInfo(name='sherleyt',
token='210B9238D5690C0A1540C7A22D028604',
secret='1N//AOKd3Na8+g2GPVk98A81Z1ED3s9mZgT+L7kh')
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/Info201-Final-Project-Group-5-AF')
runApp('Documents/University of Washington, Seattle/INFO 201/Info201-Final-Project-Group-5-AF')
runApp('Documents/University of Washington, Seattle/INFO 201/Info201-Final-Project-Group-5-AF')
runApp('Documents/University of Washington, Seattle/INFO 201/Info201-Final-Project-Group-5-AF')
runApp('Documents/University of Washington, Seattle/INFO 201/Info201-Final-Project-Group-5-AF')
is.data.frame(meteorite.data)
meteorite.data <- source("CleanMeteoriteData.R")
setwd("~/Documents/University of Washington, Seattle/INFO 201/Info201-Final-Project-Group-5-AF")
meteorite.data <- source("CleanMeteoriteData.R")
is.data.frame(meteorite.data)
View(meteorite.data)
meteorite.data <- data.frame(meteorite.data)
flatten(meteorite.data)
library(dplyr)
meteorite.data <- source("CleanMeteoriteData.R")
is.data.frame(meteorite.data)
flatten(meteorite.data)
library(dplyr)
meteorite.data <- flatten(meteorite.data)
runApp()
