print(highest.speed)
highest.speed <- mutate(flights, speed = distance/(hour + minute / 60))
group_by(dest) %>%
summarize(
average.speed <- mean(speed, na.rm = TRUE)
) %>%
filter(average.speed == max(average.speed))
print(highest.speed)
highest.speed <- mutate(flights, speed = distance/(hour + minute / 60)) %>%
group_by(dest) %>%
summarize(
average.speed <- mean(speed, na.rm = TRUE)
) %>%
filter(average.speed == max(average.speed))
print(highest.speed)
highest.speed <- mutate(flights, speed = distance/(hour + minute / 60)) %>%
group_by(dest) %>%
summarize(
average.speed <- mean(speed, na.rm = TRUE)
) %>%
filter(average.speed == max(average.speed))
print(highest.speed)
library(nycflights13)
library(dplyr)
# What was the average departure delay in each month?
# Save this as a data frame `dep.delay.by.month`
# Hint: you'll have to perform a grouping operation before summarizing your data
dep.delay.by.month <- group_by(flights, month) %>%
summarize(
mean = mean(dep_delay, na.rm = TRUE)
)
print(dep.delay.by.month)
# Which month had the greatest average departure delay?
max.month <- filter(dep.delay.by.month, mean == max(mean))
print(max.month)
# If your above data frame contains just two columns (e.g., "month", and "delay"
# in that order), you can create a scatterplot by passing that data frame to the
# 'plot()' function
plot(dep.delay.by.month)
# To which destinations were the average arrival delays the highest?
# Hint: you'll have to perform a grouping operation before summarizing your data
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(average.delay == max(average.delay, na.rm = TRUE))
print(average.arrival.delay)
# You can look up these airports in the `airports` data frame!
# Which city was flown to with the highest average speed?
highest.speed <- mutate(flights, speed = distance/(hour + minute / 60)) %>%
group_by(dest) %>%
summarize(
average.speed <- mean(speed, na.rm = TRUE)
) %>%
filter(average.speed == max(average.speed))
print(highest.speed)
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(average.delay == max(average.delay, na.rm = TRUE))
print(average.arrival.delay)
View(head(airports))
View(head(average.delay))
average.delay <- group_by(flights, dest) %>%
summarize(
average = mean(arr_delay)
)
View(head(average.delay))
average.arrival.delay <- group_by(flights, dest) %>%
summarize(
average.delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(average.delay == max(average.delay, na.rm = TRUE))
print(average.arrival.delay)
View(head(airports))
# You can look up these airports in the `airports` data frame!
View(head(airports))
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
?cut()
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
countries <- map_data("world")
View(countries)
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
install.packages("sp")
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
install.packages('maptools')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp('Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='sherleyt',
token='210B9238D5690C0A1540C7A22D028604',
secret='<SECRET>')
rsconnect::setAccountInfo(name='sherleyt',
token='210B9238D5690C0A1540C7A22D028604',
secret='1N//AOKd3Na8+g2GPVk98A81Z1ED3s9mZgT+L7kh')
rsconnect::setAccountInfo(name='sherleyt',
token='210B9238D5690C0A1540C7A22D028604',
secret='1N//AOKd3Na8+g2GPVk98A81Z1ED3s9mZgT+L7kh')
install.packages("gpclib")
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/Info201-Final-Project-Group-5-AF')
install.packages("gpclib")
runApp('Documents/University of Washington, Seattle/INFO 201/Info201-Final-Project-Group-5-AF')
shiny::runApp('Documents/University of Washington, Seattle/INFO 201/Info201-Final-Project-Group-5-AF')
runApp('Documents/University of Washington, Seattle/INFO 201/Info201-Final-Project-Group-5-AF')
install.packages(leaflet)
install.packages("leaflet")
library(shiny)
library(ggplot2)
library(dplyr)
library(maps)
source('spatial_utils.R')
#meteorite.data <- source("CleanMeteoriteData.R")
#is.data.frame(meteorite.data)
#meteorite.data <- flatten(meteorite.data)
complete.meteorite.data <- read.csv("data/meteorite-landings.csv",
stringsAsFactors = FALSE)
population.density <- read.csv("data/world_population.csv",
stringsAsFactors = FALSE)
colnames(population.density) <- c('Country', '1755','1760','1765','1770','1775','1780','1785','1790','1795','1800','1805','1810','1815','1820','1825',
'1830','1835','1840','1845','1850','1855','1860','1865','1870','1875','1890','1895','1900','1905','1910','1915',
'1920','1925','1930','1935','1940','1945','1950','1955','1960','1965','1970','1975','1980','1985','1990','1995',
'2000','2005','2010','2015')
meteorite.data <- complete.meteorite.data %>%
filter(year >= 860 & year <= 2016) %>%
# filter out weird years
filter(reclong <= 180 & reclong >= -180 & (reclat != 0 | reclong != 0)) %>%
# filter out weird locations
filter(mass != 0.00)
setwd("~/Documents/University of Washington, Seattle/INFO 201/Info201-Final-Project-Group-5-AF")
library(shiny)
library(ggplot2)
library(dplyr)
library(maps)
source('spatial_utils.R')
#meteorite.data <- source("CleanMeteoriteData.R")
#is.data.frame(meteorite.data)
#meteorite.data <- flatten(meteorite.data)
complete.meteorite.data <- read.csv("data/meteorite-landings.csv",
stringsAsFactors = FALSE)
population.density <- read.csv("data/world_population.csv",
stringsAsFactors = FALSE)
colnames(population.density) <- c('Country', '1755','1760','1765','1770','1775','1780','1785','1790','1795','1800','1805','1810','1815','1820','1825',
'1830','1835','1840','1845','1850','1855','1860','1865','1870','1875','1890','1895','1900','1905','1910','1915',
'1920','1925','1930','1935','1940','1945','1950','1955','1960','1965','1970','1975','1980','1985','1990','1995',
'2000','2005','2010','2015')
meteorite.data <- complete.meteorite.data %>%
filter(year >= 860 & year <= 2016) %>%
# filter out weird years
filter(reclong <= 180 & reclong >= -180 & (reclat != 0 | reclong != 0)) %>%
# filter out weird locations
filter(mass != 0.00)
View(population.density)
install.packages("magrittr")
install.packages("magrittr")
library(shiny)
library(ggplot2)
library(dplyr)
library(maps)
source('spatial_utils.R')
#meteorite.data <- source("CleanMeteoriteData.R")
#is.data.frame(meteorite.data)
#meteorite.data <- flatten(meteorite.data)
complete.meteorite.data <- read.csv("data/meteorite-landings.csv",
stringsAsFactors = FALSE)
population.density <- read.csv("data/world_population.csv",
stringsAsFactors = FALSE)
colnames(population.density) <- c('Country', '1755','1760','1765','1770','1775','1780','1785','1790','1795','1800','1805','1810','1815','1820','1825',
'1830','1835','1840','1845','1850','1855','1860','1865','1870','1875','1890','1895','1900','1905','1910','1915',
'1920','1925','1930','1935','1940','1945','1950','1955','1960','1965','1970','1975','1980','1985','1990','1995',
'2000','2005','2010','2015')
meteorite.data <- complete.meteorite.data %>%
filter(year >= 1974 & year <= 2016) %>%
# filter out weird years
filter(reclong <= 180 & reclong >= -180 & (reclat != 0 | reclong != 0)) %>%
# filter out weird locations
filter(mass != 0.00)
View(population.density)
temp.pd <- population.density[, 9:52]
colnames(temp.pd) <- c('Country', '1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988',
'1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004',
'2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016','1980','1985','1990','1995',
'2000','2005','2010','2015')
temp.pd <- population.density[, 9:52]
colnames(temp.pd) <- c('Country', '1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988',
'1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004',
'2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016')
View(temp.pd)
temp.pd <- population.density[, 1:44]
colnames(temp.pd) <- c('Country', '1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988',
'1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004',
'2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016')
View(temp.pd)
countries <- map_data("world")
View(countries)
both.data <- left_join(countries, temp.pd, by = c(region = Country))
both.data <- left_join(countries, temp.pd, by = c("region" = "Country"))
View(both.data)
both.data <- left_join(countries, temp.pd, by = c("region" = "Country")) %>%
na.omit()
View(both.data)
runApp('~/Documents/University of Washington, Seattle/INFO 201/a7-data-app-sherleyt')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(temp.pd)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
temp.pd <- select(temp.pd, Country, 1995)
View(temp.pd)
temp.pd <- select(temp.pd, Country, 1995)
temp.pd <- select(temp.pd, 'Country', '1995')
View(temp.pd)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(ggplot2)
library(dplyr)
library(maps)
source('spatial_utils.R')
#meteorite.data <- source("CleanMeteoriteData.R")
#is.data.frame(meteorite.data)
#meteorite.data <- flatten(meteorite.data)
complete.meteorite.data <- read.csv("data/meteorite-landings.csv",
stringsAsFactors = FALSE)
population.density <- read.csv("data/world_population.csv",
stringsAsFactors = FALSE)
temp.pd <- population.density[, 1:44]
colnames(temp.pd) <- c('Country', '1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988',
'1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004',
'2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016')
countries <- map_data("world")
#relevant <- select(temp.pd, 'Country', '1995') %>%
#  na.omit()
both_data <- left_join(countries, temp.pd, by = c("region" = "Country"))
# na.omit()
both_data <- select(both_data, long, lat, region, 1995)
countries <- map_data("world")
library(shiny)
library(ggplot2)
library(dplyr)
library(maps)
source('spatial_utils.R')
#meteorite.data <- source("CleanMeteoriteData.R")
#is.data.frame(meteorite.data)
#meteorite.data <- flatten(meteorite.data)
complete.meteorite.data <- read.csv("data/meteorite-landings.csv",
stringsAsFactors = FALSE)
population.density <- read.csv("data/world_population.csv",
stringsAsFactors = FALSE)
temp.pd <- population.density[, 1:44]
colnames(temp.pd) <- c('Country', '1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988',
'1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004',
'2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016')
countries <- map_data("world")
#relevant <- select(temp.pd, 'Country', '1995') %>%
#  na.omit()
both_data <- left_join(countries, temp.pd, by = c("region" = "Country"))
# na.omit()
both_data <- select(both_data, long, lat, region, 1995)
View(both_data)
runApp()
both_data <- select(both_data, 'long', 'lat', 'region', '1995')
View(both_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
stringsAsFactors = FALSE)
temp.pd <- population.density[, 1:44]
colnames(temp.pd) <- c('Country', '1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988',
'1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004',
'2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016')
countries <- map_data("world")
#relevant <- select(temp.pd, 'Country', '1995') %>%
#  na.omit()
both_data <- left_join(countries, temp.pd, by = c("region" = "Country"))
View(both_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(ggplot2)
library(dplyr)
library(maps)
source('spatial_utils.R')
#meteorite.data <- source("CleanMeteoriteData.R")
#is.data.frame(meteorite.data)
#meteorite.data <- flatten(meteorite.data)
complete.meteorite.data <- read.csv("data/meteorite-landings.csv",
stringsAsFactors = FALSE)
population.density <- read.csv("data/world_population.csv",
stringsAsFactors = FALSE)
temp.pd <- population.density[, 1:44]
colnames(temp.pd) <- c('Country', '1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988',
'1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004',
'2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016')
countries <- map_data("world")
#relevant <- select(temp.pd, 'Country', '1995') %>%
#  na.omit()
both_data <- left_join(countries, temp.pd, by = c("region" = "Country"))
View(both_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
complete.meteorite.data <- read.csv("data/meteorite-landings.csv",
stringsAsFactors = FALSE)
population.density <- read.csv("data/world_population.csv",
stringsAsFactors = FALSE)
temp.pd <- population.density[, 1:44]
population.density <- read.csv("data/world_population.csv",
stringsAsFactors = FALSE)
View(population.density)
temp.pd <- population.density[, 1:44]
colnames(temp.pd) <- c('Country', '1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988',
'1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004',
'2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016')
View(temp.pd)
countries <- map_data("world")
both_data <- left_join(countries, temp.pd, by = c("region" = "Country"))
View(both_data)
runApp()
runApp()
runApp()
complete.meteorite.data <- read.csv("data/meteorite-landings.csv",
stringsAsFactors = FALSE)
View(complete.meteorite.data)
runApp()
